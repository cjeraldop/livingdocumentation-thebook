# Tools for Living Documentation


--
I've extracted my old little Java wrapper on top of dot and moved it to Github: https://github.com/cyriux/dot-diagram #LivingDiagram

--

At the time of writing, here are some of the available tools of particular interest for living documentation.

- Your programming language (s) and its extension capabilities
-



ASCII, little syntax, diagrammr, dot

- Cucumber, SpecFlow, DaSpec
- Markdown
- Graphviz
- Wordcloud


Swagger

- Maven site
- Maven Tree
- all CD tools

- DocBook?
- AsciiDoc
- PlantUML
- Ditaa

- Dexy

Svg, Graphviz, pandoc, js, neo4j, dataviz

- custom parser

Tools like the Javadoc standard Doclet, or alternative tools like QDox or even [Google Guava] ClassPath(http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/reflect/ClassPath.html)


---
literate programming

Arnaud Bailly

Extract the Clojure code to convert it into Latex (not ideal but working)

https://github.com/kovasb/session

Brute force solution as an oracle & as more accessible documentation

Formula in fitness + reconciliation of the test against the actual code;
Excel sheet as the actual reference: why copy-paste and lose the formula? Alternative formula as an oracle.
--
https://github.com/gdeer81/marginalia
