LD - more stuff

--
# Architecture or Ready-made knowledge?

Coined Gierke's law yesterday: from the structure of a software system you can derive the book the architect read most recently...
-- @olivergierke Oliver Gierke
--
# Working collectively

OH: "Mob programming. It's like 'pair programming meets RAID6'" via Phil Calcado
--
# Introducing Living Documentation

Focus on Interactive, Face to Face knowledge transfer

This said, consider techniques to record the key bits of knowledge that have to be known, that every newcomer has to learn, and that matter in the long run.

Relax on the wiki.

README
Decision Log
Core Concepts / Process aka Main Sites
Guided Tours
Napkin Sketches
--
C# Example
public class CoreConceptAttribute : Attribute

[CoreConcept("The main steps of enriching the Customer Purchase from the initial order to the ready to ship Shipment Request")]

How to name the guided tour:
- string
- enum of a certain type // but this creates a coupling between the attribute and the solution-specific enum
- generic enum, or even object
-

--
WTF funny!
"Don't mess with Georges"

Manager is micromanaging and pissed the team off -> in retaliation Georges turned the code into extremely convoluted pinball of calls to abstract stuff calling more abstract stuff, going through multiple levels of factories and builders, with generic naming like sync() or execute(), build() or do(). Just to be too complicated in order to lose the manager (a former developer). "It makes our life better if he can't read the code anymore".
--

documentation is code for your fellow developers, including bots

Concrete fiction story to do

--
BCBS 239 -> transparency on data transformation & extreme traceability
--
“Everyone has to know where the boundaries lie, and be able to recognize the Context of any piece of code or any situation.” - @ericevans0

--
Stable links:
To queries in TFS
