## Another Practical Example: the JSyn library

I've chosen one of the domains described by the Jsyn library: Sound Synthesis.

This domain is in fact a specialized version of the digital signal processing domain. This domain is a standard field with a complete theory available in the literature and taught in schools and universities.

Even if you're not familiar with either digital signal processing or sound synthesis, you can still see in practice how the domain knowledge can be extracted directly from the source code.

For the illustration purpose let's pretend we own the source code of this library, so we can add annotations to categorize the packages, classes and interfaces. This library was not written with documentation in mind, but the organization and the design of the source code accommodates a living documentation a posteriori quite well.

Remember that here we ignore everything that does not belong to the domain. In particular we ignore everything technical.

<pre>
>com.jsyn.data
@CoreConcept
AudioSample.class
DoubleTable.class
FloatSample.class
Function.class
HammingWindow.class
@Policy
HannWindow.class
SampleMarker.class
@CoreConcept
SegmentedEnvelope.class
SequentialData.class
SequentialDataCommon.class
ShortSample.class
@Policy
SpectralWindow.class
SpectralWindowFactory.class
@Quantity
Spectrum.class
</pre>

<pre>
>com.softsynth.jsyn
AddUnit.class
AddUnsignedUnit.class
AppletFrame.class
AudioDevice.class
BusReader.class
BusWriter.class
ChannelIn.class
ChannelOut.class
ChunkHandler.class
CompareUnit.class
CrossFade.class
CSyn.class
CSynAudioInterface.class
CSynInterface.class
CSynNativeImplementation.class
CuePoint.class
DelayUnit.class
DivideUnit.class
DualInTwoOutUnit.class
EnvelopePlayer.class
EnvelopePoints.class
@Convention
EqualTemperedTuning.class
@Convention
ExponentialLag.class
@CoreConcept @Policy
Filter
Filter_BandPass.class
Filter_HighPass.class
Filter_HighShelf.class
Filter_LowPass.class
Filter_LowShelf.class
Gateway.class
@CoreConcept @Policy
ImpulseOscillator.class
LineIn.class
LineOut.class
PanControlUnit.class
PanUnit.class
@Policy
ParabolicEnvelope.class
ParseIFF.class
ParseRIFF.class
@Policy
PeakFollower.class
@Policy
PitchTracker.class
@Policy
PulseOscillator.class
PulseOscillatorBL.class
@Policy
RedNoise.class
@Policy
SampleReader.class
SampleWriter.class
@Policy
SawtoothOscillator.class
SubtractUnit.class
@Service
Synth.class
SynthAlert.class
SynthBusInput.class

WhiteNoise.class

>com.softsynth.jsyn.util
@Convention
HarmonicTable.class
</pre>
