## Efficient Documents / Diagrams

### Editorial Perspective

The Editorial Perspective is based on the intent of the considered document. Of course this assumes that each document has a clearly identified purpose, for an identified audience, which should be the case.

A document whose purpose is to clarify the external actors of the system for a non-technical audience should hide everything except the system as a black box and each actor with its non-technical name and the business relationship with the system. It should not show anything about JBoss, Http or Json. It should not show components or service name. The Editorial Perspective is what makes a document relevant or not. A document that tries to show different things at the same time requires more work from its audience and does not convey a clear message.

A related anti-pattern is *Showing what's convenient* rather than *Showing what's Relevant to an Identified Purpose*.

### Presentation Rules

There are rules for a good document: showing or listing no more than 7+/-2 items is an important one, choosing a layout or list style or table or chart that is congruent with the structure of the problem etc.

> Why do so many engineers think complicated system diagrams are impressive? What's truly impressive are simple solutions to hard problems. -- @nathanmarz

> The ultimate rule of thumb: if there is at least one line crossing another in a diagram, the system is too complicated -- @pavlobaron


### Visualization guidelines:

- Make symmetries obvious: Manual vs Automatic, API vs SPI, Do Nothing vs Do Something, Single vs Plural, same intent beyond variety, orthogonal stuff
- equivalence as--whole: user + UI + daemon = automated consumer
- layout matters: proximity, boundaries, left-right, bottom-up, zoom overview-details
