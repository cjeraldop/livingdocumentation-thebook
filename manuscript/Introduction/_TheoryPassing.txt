# Theory-Passing

%% TO MOVE TO DESIGN

(Peter Naur, Programming as Theory Building, 1985)

The key aspect of programming "is to have the programmers build a theory of the way the matters at hand may be supported by the execution of a program."

"The programmer having the theory of the program can explain how the solution relates to the affairs of the world that it helps to handle."

"The programmer having the theory of the program can explain why each part of the program is what it is..."

"The programmer having the theory of the program is able to respond constructively to any demand for a modification of the program so as to support the affairs of the world in a new manner"

"For a new programmer to come to possess an existing theory of a program it is insufficient that he or she has the opportunity to become familiar with the program text and other documentation."


- Interactive: tweakable tests, Visible Workings, Small-Scale Models
- Redundancy of media: Source Code, Integrated Documentation in IDE, generated living Diagrams, Domain-Specific sketches (Smoke & Mirror, Ruth Malan?)
- Background: influences from the literature, dominant styles of code, design and architecture
- Recorded decisions and their Rationales
- Metaphors
- Brain dump as blog posts
- Tribal knowledge by Working Collectively with veterans of the system

--
Project = Delivery + Learning

- Keep it all versioned together
- Keep track of what's been learnt and understood. What's has been preferred, compared to what alternatives and why. -> AUGMENTED CODE + MAINTAIN A BLOG
- But don't try to capture every event; instead rewrite the story to make it simpler and shorter (like Git history with rebase)

## ADR / Decision Log

In the book *Software Craftsmanship Apprenticeship Patterns*, Dave Hoover and Adewale Oshineye advocate "Record what you learn" and "Share what you learn". A blog from the team members is a nice complement to any other kind of documentation. Though it is more personal, it tells stories that are more compelling that most documentation. It tells important bits of the adventure, with the feelings of the people that were part of it.

> I like having a product and/or team blog. Journalling decisions and conversations as you have them documents history. It also shows how decisions got made, and lets you see changing tastes or learnings over time.
> -- Dan North on Twiter, talking to Liz Kheogh and Jeff Sussna

--
Agile documentation goal is to "help people interact"
- knowing who to contact
- knowing how to work on the project, guidelines and how-to
- sharing the same vocabulary
- sharing the same mental model, metaphors
- sharing the same goal
